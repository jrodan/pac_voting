package com.prodyna.pac.voting.web.filter;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.web.csrf.CsrfToken;
import org.springframework.web.filter.OncePerRequestFilter;
import org.springframework.web.util.WebUtils;

/**
 * Filter used to put the CSRF token generated by Spring Security in a cookie for use by AngularJS.
 */
public class CsrfCookieGeneratorFilter extends OncePerRequestFilter
{
    @Override
    protected void doFilterInternal(final HttpServletRequest request, final HttpServletResponse response, final FilterChain filterChain)
            throws ServletException, IOException
    {
        final CsrfToken csrfToken = (CsrfToken) request.getAttribute(CsrfToken.class.getName());

        if (csrfToken != null)
        {
            Cookie cookie = WebUtils.getCookie(request, "X-CSRF-TOKEN");
            final String token = csrfToken.getToken();

            // Send the cookie only if the token has changed
            if ((cookie == null) || ((token != null) && !token.equals(cookie.getValue())))
            {
                // Session cookie that will be used by AngularJS
                cookie = new Cookie("CSRF_TOKEN", token);
                cookie.setMaxAge(-1);
                cookie.setHttpOnly(false);
                cookie.setPath("/");

                response.addCookie(cookie);
            }
        }
        filterChain.doFilter(request, response);
    }
}
